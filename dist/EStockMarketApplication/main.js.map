{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/Services/authentication.service.ts","./src/app/Services/cache.service.ts","./src/app/Services/can-activate-route.guard.service.ts","./src/app/Services/company-details.service.ts","./src/app/Services/stock-details.service.ts","./src/app/advance-search/advance-search.component.ts","./src/app/advance-search/advance-search.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basic-search/basic-search.component.ts","./src/app/basic-search/basic-search.component.html","./src/app/common/constant.ts","./src/app/company-list/company-list.component.ts","./src/app/company-list/company-list.component.html","./src/app/company-register/company-register.component.ts","./src/app/company-register/company-register.component.html","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menubar/menubar.component.ts","./src/app/menubar/menubar.component.html","./src/app/models/company-search-detail.ts","./src/app/models/company.ts","./src/app/stock-register/stock-register.component.ts","./src/app/stock-register/stock-register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CacheService } from './cache.service';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http'\r\nimport { LoginModel } from '../models/login-model';\r\nimport { Router } from '@angular/router';\r\nimport { catchError, Observable, of } from 'rxjs';\r\nimport { AuthenticatedResponse } from '../models/auth-response-model';\r\nimport { apiEndpoint, authApiBaseUrl } from '../common/constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private httpClient: HttpClient, private cacheService: CacheService, private router: Router) { }\r\n\r\n  login(loginModel: LoginModel): Observable<AuthenticatedResponse> {\r\n    const apiUrl = authApiBaseUrl + apiEndpoint.authEndpoint;  \r\n      return this.httpClient.post<AuthenticatedResponse>(apiUrl, JSON.stringify(loginModel), {\r\n        headers: new HttpHeaders({ \r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      }).pipe(\r\n       catchError((error: HttpErrorResponse) => {\r\n        console.log(error.statusText);\r\n        throw new Error(error.error);\r\n      }));  \r\n  }\r\n\r\n  logout() {\r\n    this.cacheService.clear();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  setBearerToken(token: string) {\r\n    this.cacheService.setBearerToken(token);\r\n  }\r\n\r\n  getBearerToken(): string {\r\n    return this.cacheService.getBearerToken();\r\n  }\r\n\r\n  setLoggedInUser(loginModel: LoginModel) {\r\n    this.cacheService.setLoggedInUser(loginModel);\r\n  }\r\n\r\n  getLoggedInUser(): LoginModel | undefined {\r\n    return this.cacheService.getLoggedInUser();\r\n  }\r\n\r\n  isLoggedIn() {\r\n    let authToken = this.getBearerToken();\r\n    if (authToken === \"\" || authToken === undefined) {\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { LoginModel } from '../models/login-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CacheService {\r\n\r\n  private bearerToken!: string;\r\n  private loginModel: LoginModel | undefined;\r\n  \r\n  constructor() { }\r\n\r\n  setBearerToken(token: string) {\r\n    this.bearerToken = token;\r\n  }\r\n\r\n  getBearerToken(): string {\r\n    return this.bearerToken\r\n  }\r\n\r\n  setLoggedInUser(loginModel: LoginModel) {\r\n    this.loginModel = loginModel;\r\n  }\r\n\r\n  getLoggedInUser(): LoginModel | undefined {\r\n    return this.loginModel;\r\n  }\r\n\r\n  clear() {\r\n    this.bearerToken = \"\";\r\n    this.loginModel = undefined;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class CanActivateRouteGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (this.authenticationService.isLoggedIn()) {\n      return true;\n    }\n    this.authenticationService.logout();\n    return false;\n  }\n\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, map, catchError } from 'rxjs';\r\nimport { Company } from '../models/company';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { apiEndpoint, companyApiBaseUrl } from '../common/constant';\r\nimport { CompanyResponse } from '../models/companyResponse';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyDetailsService {\r\n\r\n  private companyList!: Company[];\r\n\r\n  constructor(private httpClient: HttpClient, private authenticationService: AuthenticationService) { }\r\n\r\n  post(companyDetails: Company): Observable<number> {\r\n    // add token into header\r\n    var token = this.authenticationService.getBearerToken();\r\n\r\n    const apiUrl = companyApiBaseUrl + apiEndpoint.addCompanyEndpoint;\r\n    const companyRequest = {\r\n      code: companyDetails.companyCode,\r\n      name: companyDetails.companyName,\r\n      ceoName: companyDetails.companyCeoName,\r\n      turnOver: companyDetails.companyTurnover as number,\r\n      website: companyDetails.companyWebsite,\r\n      exchange: [companyDetails.companyStockExchange],\r\n    };\r\n    return this.httpClient.post<number>(apiUrl, JSON.stringify(companyRequest), {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }).pipe(catchError((error: HttpErrorResponse) => {\r\n      console.log(error.statusText);\r\n      throw new Error(error.error);\r\n    }));\r\n  }\r\n\r\n  get(): Observable<Company[] | undefined> {\r\n    const apiUrl = companyApiBaseUrl + apiEndpoint.getAllCompanyEndpoint;\r\n    const companyResponse = this.httpClient.get<CompanyResponse[]>(apiUrl).\r\n      pipe(map(\r\n        (companyDetails: CompanyResponse[]) => {\r\n          return this.getAllCompanyDetails(companyDetails)\r\n        }), catchError((error: HttpErrorResponse) => {\r\n          console.log(error.statusText);\r\n          throw new Error(error.error);\r\n        }));\r\n    return companyResponse;\r\n  }\r\n\r\n  getById(companyCode: string): Observable<Company | undefined> {\r\n    companyCode = companyCode.toUpperCase();\r\n    const apiUrl = companyApiBaseUrl + apiEndpoint.getCompanyEndpoint + \"/\" + companyCode;\r\n    const companyResponse = this.httpClient.get<CompanyResponse>(apiUrl).\r\n      pipe(map(\r\n        (companyDetails: CompanyResponse) => {\r\n          return this.getCompanyDetails(companyDetails);\r\n        }), catchError((error: HttpErrorResponse) => {\r\n          console.log(error.statusText);\r\n          throw new Error(error.error);\r\n        }));\r\n    return companyResponse;\r\n  }\r\n\r\n  delete(companyCode: string): Observable<number> {\r\n    const apiUrl = companyApiBaseUrl + apiEndpoint.deleteCompanyEndpoint + \"/\" + companyCode;\r\n    return this.httpClient.delete<number>(apiUrl).pipe(catchError((error: HttpErrorResponse) => {\r\n      console.log(error.statusText);\r\n      throw new Error(error.error);\r\n    }));\r\n  }\r\n  private getAllCompanyDetails(companyDetails: CompanyResponse[]): Company[] | undefined {\r\n    if (companyDetails) {\r\n      this.companyList = [];\r\n      companyDetails.forEach(element => {\r\n        this.companyList.push(new Company(\r\n          element.code,\r\n          element.name,\r\n          element.ceoName,\r\n          element.turnOver,\r\n          element.website,\r\n          element.exchange[0]\r\n        ));\r\n      });\r\n    }\r\n    return this.companyList;\r\n  }\r\n\r\n  private getCompanyDetails(companyDetails: CompanyResponse): Company | undefined {\r\n    var company = undefined;\r\n    if (companyDetails) {\r\n      company = new Company(\r\n        companyDetails.code,\r\n        companyDetails.name,\r\n        companyDetails.ceoName,\r\n        companyDetails.turnOver,\r\n        companyDetails.website,\r\n        companyDetails.exchange[0])\r\n    }\r\n    return company;\r\n  }\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, map, Observable } from 'rxjs';\r\nimport { CompanySearchDetail } from '../models/company-search-detail';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { apiEndpoint, stockApiBaseUrl } from '../common/constant';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockDetailsService {\r\n\r\n  constructor(private httpClient: HttpClient, private authenticationService: AuthenticationService, private datePipe: DatePipe) { }\r\n\r\n  getById(companyCode: string, startDate: Date, endDate: Date): Observable<CompanySearchDetail> {\r\n    // add token into header\r\n    var token = this.authenticationService.getBearerToken();\r\n    companyCode = companyCode.toUpperCase();\r\n    const apiUrl = stockApiBaseUrl + apiEndpoint.getCompanyStockEndpoint + \"/\" + companyCode + \"/\" + startDate + \"/\" + endDate;\r\n    const companySearchDetailResponse = this.httpClient.get<CompanySearchDetail>(apiUrl, {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }).pipe(map(\r\n        (companyDetails: CompanySearchDetail) => {\r\n          return this.getCompanyStockDetails(companyDetails, companyCode);\r\n        }),\r\n        catchError((error: HttpErrorResponse) => {\r\n          console.log(error.statusText);\r\n          throw new Error(error.error);\r\n        }));\r\n    return companySearchDetailResponse;\r\n  }\r\n\r\n  add(companyCode: string, stockPrice: number): Observable<number> {\r\n    // add token into header\r\n    var token = this.authenticationService.getBearerToken();\r\n    const apiUrl = stockApiBaseUrl + apiEndpoint.addCompanyStockEndpoint;\r\n    const stockRequest = {\r\n      companyCode: companyCode,\r\n      stockPrice: stockPrice\r\n    };\r\n    return this.httpClient.post<number>(apiUrl, JSON.stringify(stockRequest), {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }).pipe(catchError((error: HttpErrorResponse) => {\r\n      console.log(error.statusText);\r\n      throw new Error(error.error);\r\n    }));\r\n  }\r\n\r\n  private getCompanyStockDetails(companyDetail: CompanySearchDetail, companyCode: string): CompanySearchDetail {\r\n    var companySearchDetail: CompanySearchDetail = {};\r\n    if (companyDetail) {\r\n      companySearchDetail = new CompanySearchDetail(companyCode,\r\n        companyDetail.stocks,\r\n        companyDetail.maxPrice,\r\n        companyDetail.minPrice,\r\n        companyDetail.avgPrice);\r\n    }\r\n    return companySearchDetail;\r\n  }\r\n}\r\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { Company } from '../models/company';\nimport { CompanySearchDetail } from '../models/company-search-detail';\nimport { StockDetails } from '../models/stock';\nimport { CompanyDetailsService } from '../Services/company-details.service';\nimport { StockDetailsService } from '../Services/stock-details.service';\n\n@Component({\n  selector: 'app-advance-search',\n  templateUrl: './advance-search.component.html',\n  styleUrls: ['./advance-search.component.css']\n})\nexport class AdvanceSearchComponent implements OnInit {\n\n  companyList!: Company[];\n  stockList?: StockDetails[];\n  companySearchDetail!: CompanySearchDetail;\n  errorMessage?: string;\n  minStockPrice?: number;\n  maxStockPrice?: number;\n  avgStockPrice?: number;\n  maxDate?: string;\n  advanceCompanySearch!: FormGroup;\n  submitted?: boolean;\n  companyName?: string;\n\n  constructor(private companyDetailsService: CompanyDetailsService, private stockDetailsService: StockDetailsService,\n    private form: FormBuilder, private datepipe: DatePipe) { }\n\n  ngOnInit(): void {\n    this.maxDate = this.datepipe.transform(new Date(), 'yyyy-MM-dd') || undefined;\n    this.advanceCompanySearch = this.form.group({\n      companyCode: [\"\", Validators.required],\n      startDate: [\"\", Validators.required],\n      endDate: [\"\", Validators.required]\n    });\n\n    this.companyDetailsService.get().\n      subscribe(\n        (companyList: Company[] | undefined) => {\n          if (companyList !== undefined && companyList.length > 0) {\n            this.companyList = companyList;\n            return;\n          }\n          this.errorMessage = 'No company registered yet!!';\n        });  \n  }\n\n  get formControl(): { [key: string]: AbstractControl } {\n    return this.advanceCompanySearch.controls;\n  }\n\n  search() {\n    this.errorMessage = '';\n    if (this.advanceCompanySearch.invalid) {\n      this.submitted = true;\n      return;\n    }\n    this.submitted = false;\n    const companyCode = this.advanceCompanySearch.value.companyCode;\n    const startDate = this.advanceCompanySearch.value.startDate;\n    const endDate = this.advanceCompanySearch.value.endDate;\n\n    if (!companyCode || !startDate || !endDate) {\n      this.errorMessage = 'All the 3 fields are mandatory for search..';\n    }\n    else if (startDate > endDate) {\n      this.errorMessage = 'Start date must be before end date..';\n    }\n    else {\n      this.stockDetailsService.getById(companyCode, startDate, endDate).\n        subscribe((searchDetail: CompanySearchDetail) => {\n          if (searchDetail !== undefined) {\n            this.companySearchDetail = searchDetail;\n            this.companyName = searchDetail.companyName;\n            this.stockList = searchDetail.stocks;\n            this.minStockPrice = searchDetail.minPrice;\n            this.maxStockPrice = searchDetail.maxPrice;\n            this.avgStockPrice = searchDetail.avgPrice;\n          } else {\n            this.errorMessage = \"Data not found\";\n          }\n        });      \n    }\n  }\n}\n","<app-menubar></app-menubar>\n<h2 class=\"adv-title\">Advance Search</h2>\n<form [formGroup]=\"advanceCompanySearch\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <label class=\"form-label\" for=\"compcode\">Company Code</label>\n            <select class=\"form-control\" formControlName=\"companyCode\"\n                [ngClass]=\"{ 'is-invalid': submitted && formControl['companyCode'].errors}\">\n                <option>Select Company Code</option>\n                <option *ngFor=\"let company of companyList\">{{company.companyCode}}</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyCode'].errors\">\n                Please select the company code\n            </div>\n        </div>\n\n        <div class=\"col-sm-3\">\n            <label class=\"form-label\" for=\"startdate\">Start Date</label>\n            <input type=\"date\" formControlName=\"startDate\" max=\"{{maxDate}}\" placeholder=\"Start Date\"\n                class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted  && formControl['startDate'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['startDate'].errors\">\n                Please enter the start date\n            </div>\n        </div>\n        <div class=\"col-sm-3\">\n            <label class=\"form-label\" for=\"enddate\">End Date</label>\n            <input type=\"date\" formControlName=\"endDate\" max=\"{{maxDate}}\" placeholder=\"End Date\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && formControl['endDate'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['endDate'].errors\">\n                Please enter the end date\n            </div>\n        </div>\n        <div class=\"col-sm-3 pt-2\">\n            <button type=\"submit\" (click)=\"search()\" class=\"btn btn-primary mt-4\">Search</button>\n        </div>\n    </div>\n</form>\n<div class=\"mt-2\">\n    <div class=\"pb-2\">\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n            {{ errorMessage }}\n        </div>\n        <h3 *ngIf=\"stockList && !errorMessage\">Company Name <span class=\"text-primary\">{{companyName}}</span></h3>\n    </div>\n    <div class=\"row\" *ngIf=\"stockList && !errorMessage\">\n        <div class=\"col-10\">\n            <h4>Company Stock Details</h4>\n            <table class=\"table table-striped mt-3\">\n                <thead>\n                    <tr class=\"table-primary\">\n                        <th>Price</th>\n                        <th>Date</th>\n                        <th>Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor='let stock of stockList'>\n                        <td>{{stock.stockPrice}}</td>\n                        <td>{{stock.stockDate}}</td>\n                        <td>{{stock.stockTime}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!errorMessage && ((minStockPrice) || (maxStockPrice) || (avgStockPrice))\">\n        <div class=\"col-3\">\n            <table class=\"table border border-info\">\n                <tbody>\n                    <tr>\n                        <td class=\"stock-td\">MIN stock price</td>\n                        <td>{{minStockPrice}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"stock-td\">MAX stock price</td>\n                        <td>{{maxStockPrice}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"stock-td\">AVG stock price</td>\n                        <td>{{avgStockPrice}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdvanceSearchComponent } from './advance-search/advance-search.component';\r\nimport { CompanyListComponent } from './company-list/company-list.component';\r\nimport { CompanyRegisterComponent } from './company-register/company-register.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BasicSearchComponent } from './basic-search/basic-search.component';\r\nimport { StockRegisterComponent } from './stock-register/stock-register.component';\r\nimport { CanActivateRouteGuard } from './Services/can-activate-route.guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: LoginComponent },\r\n  { path: \"landing\", component: LandingComponent, canActivate: [CanActivateRouteGuard] },\r\n  { path: \"companyRegister\", component: CompanyRegisterComponent, canActivate: [CanActivateRouteGuard] },\r\n  { path: \"companyList\", component: CompanyListComponent, canActivate: [CanActivateRouteGuard]  },\r\n  { path: \"advanceSearch\", component: AdvanceSearchComponent, canActivate: [CanActivateRouteGuard]  },\r\n  { path: \"search\", component: BasicSearchComponent, canActivate: [CanActivateRouteGuard]  },\r\n  { path: \"addStock\", component: StockRegisterComponent, canActivate: [CanActivateRouteGuard]  },\r\n  { path: \"login\", component: LoginComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'EStockMarketApplication';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CompanyRegisterComponent } from './company-register/company-register.component';\r\nimport { BasicSearchComponent } from './basic-search/basic-search.component';\r\nimport { CompanyListComponent } from './company-list/company-list.component';\r\nimport { AdvanceSearchComponent } from './advance-search/advance-search.component';\r\nimport { MenubarComponent } from './menubar/menubar.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule  } from '@angular/common/http';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { StockRegisterComponent } from './stock-register/stock-register.component';\r\nimport { CanActivateRouteGuard } from './Services/can-activate-route.guard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CompanyRegisterComponent,\r\n    BasicSearchComponent,\r\n    CompanyListComponent,\r\n    AdvanceSearchComponent,\r\n    MenubarComponent,\r\n    LandingComponent,\r\n    LoginComponent,\r\n    StockRegisterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [DatePipe, CanActivateRouteGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Company } from '../models/company';\r\nimport { CompanyDetailsService } from '../Services/company-details.service';\r\n\r\n@Component({\r\n  selector: 'app-basic-search',\r\n  templateUrl: './basic-search.component.html',\r\n  styleUrls: ['./basic-search.component.css']\r\n})\r\nexport class BasicSearchComponent implements OnInit {\r\n\r\n  companyDetail?: Company;\r\n  companyCode?: string;\r\n  errorMessage?: string;\r\n  submitted?: boolean;\r\n  successMessage?: string;\r\n\r\n  constructor(private companyDetailsService: CompanyDetailsService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  basicSearch() {\r\n    this.companyDetail = undefined;\r\n    this.errorMessage = undefined;\r\n    this.successMessage = undefined;\r\n    if (this.companyCode !== undefined && this.companyCode !== \"\") {\r\n      this.submitted = false;\r\n      this.companyDetailsService.getById(this.companyCode).\r\n        subscribe((company: Company | undefined) => {\r\n          if (company !== undefined) {\r\n            this.companyDetail = company;\r\n            return;\r\n          }\r\n          this.errorMessage = \"Data not found\";\r\n          return;\r\n        });\r\n    } else {\r\n      this.submitted = true;\r\n    }\r\n  }\r\n\r\n  deleteCompany(companyDetail: Company) {\r\n    const companyCode = companyDetail.companyCode || \"\";\r\n    this.companyDetailsService.delete(companyCode).\r\n      subscribe((response: number) => {\r\n        if (response === 200) {\r\n          this.successMessage = \"Company and stock details is deleted successfully!!.\";\r\n          return;\r\n        } else if (response === 404) {\r\n          this.errorMessage = \"Data not found for the company\" + companyCode + \"!!!.\";\r\n          return;\r\n        }\r\n        this.errorMessage = \"Error occurred in the delete operation.please try again!!!.\";\r\n      });\r\n  }\r\n}\r\n","<app-menubar></app-menubar>\r\n<h2>Basic Search</h2>\r\n<div>\r\n    <div class=\"center\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <label class=\"form-label\" for=\"search\">Enter company code</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-4\">\r\n                <input type=\"text\" [(ngModel)]=\"companyCode\" #search=\"ngModel\" class=\"form-control\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && search.errors }\" required />\r\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && search.errors\">\r\n                    Please enter validate company code.\r\n                </div>\r\n            </div>\r\n            <div class=\"col\">\r\n                <button type=\"button\" (click)=\"basicSearch()\" class=\"btn btn-primary\">Search</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"py-3\">\r\n        <div *ngIf=\"successMessage || errorMessage\" class=\"row\">\r\n            <div class=\"col\">\r\n                <div role=\"alert\" class=\"alert\"\r\n                    [ngClass]=\"{ 'alert-success':successMessage, 'alert-danger':errorMessage}\">\r\n                    {{successMessage}}{{errorMessage}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <table class=\"table table-striped \" *ngIf=\"companyDetail && !submitted\">\r\n            <thead>\r\n                <tr class=\"table-primary\">\r\n                    <th>Company Code</th>\r\n                    <th>Company Name</th>\r\n                    <th>Company CEO Name</th>\r\n                    <th>Company Turnover</th>\r\n                    <th>Company Website</th>\r\n                    <th>Company Stock Exchange</th>                    \r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>{{companyDetail?.companyCode}}</td>\r\n                    <td>{{companyDetail?.companyName}}</td>\r\n                    <td>{{companyDetail?.companyCeoName}}</td>\r\n                    <td>{{companyDetail?.companyTurnover}}</td>\r\n                    <td>{{companyDetail?.companyWebsite}}</td>\r\n                    <td>{{companyDetail?.companyStockExchange}}</td>                  \r\n                    <td>\r\n                        <button type=\"button\" (click)=\"deleteCompany(companyDetail)\"\r\n                            class=\"btn btn-outline-danger\">Delete Company</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","export const apiEndpoint = {\r\n    addCompanyEndpoint: '/company/register',\r\n    getCompanyEndpoint: '/company/info',\r\n    getAllCompanyEndpoint: '/company/getall',\r\n    deleteCompanyEndpoint: '/company/delete',\r\n    getCompanyStockEndpoint: '/stock/get',\r\n    addCompanyStockEndpoint: '/stock/add',\r\n    authEndpoint: '/auth/login'\r\n};\r\n\r\nexport const companyApiBaseUrl = \"https://estockapigatewayappservice.azurewebsites.net\";\r\nexport const stockApiBaseUrl = \"https://estockapigatewayappservice.azurewebsites.net\";\r\nexport const authApiBaseUrl = \"https://estockapigatewayappservice.azurewebsites.net\"","import { Component, OnInit } from '@angular/core';\r\nimport { catchError, map } from 'rxjs';\r\nimport { Company } from '../models/company';\r\nimport { CompanyDetailsService } from '../Services/company-details.service';\r\n\r\n@Component({\r\n  selector: 'app-company-list',\r\n  templateUrl: './company-list.component.html',\r\n  styleUrls: ['./company-list.component.css']\r\n})\r\nexport class CompanyListComponent implements OnInit {\r\n\r\n  companyList!: Company[];\r\n  errorMessage?: string;\r\n  successMessage?: string;\r\n\r\n  constructor(private companyDetailsService: CompanyDetailsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.successMessage = undefined;\r\n    this.errorMessage = undefined;\r\n    this.getCompanyDetailLists();\r\n  }\r\n\r\n  getCompanyDetailLists() {\r\n    this.companyDetailsService.get().\r\n      subscribe((companyList: Company[] | undefined) => {\r\n        this.companyList = [];\r\n        if (companyList !== undefined && companyList.length > 0) {\r\n          this.companyList = companyList;\r\n          return;\r\n        }\r\n        this.errorMessage = \"No company registered yet!!\";        \r\n        return;\r\n      });\r\n  }\r\n\r\n  deleteCompany(companyDetail: Company) {\r\n    const companyCode = companyDetail.companyCode || \"\";\r\n    this.companyDetailsService.delete(companyCode).\r\n      subscribe((response: number) => {\r\n        if (response === 200) {\r\n          this.successMessage = \"Company and stock details is deleted successfully!!.\";\r\n          setTimeout(() => {\r\n            this.getCompanyDetailLists();\r\n            this.successMessage = undefined;\r\n          }, 900);\r\n          return;\r\n        }\r\n        this.errorMessage = \"Error occurred in the delete operation.please try again!!!.\";\r\n        setTimeout(() => {\r\n          this.getCompanyDetailLists();\r\n          this.errorMessage = undefined;\r\n        }, 1000);\r\n      });\r\n  }\r\n}\r\n","<app-menubar></app-menubar>\n<div *ngIf=\"successMessage || errorMessage\" role=\"alert\" class=\"alert\"\n    [ngClass]=\"{ 'alert-success':successMessage, 'alert-danger':errorMessage}\">\n    {{successMessage}}{{errorMessage}}\n</div>\n<div *ngIf=\"companyList && companyList.length > 0\">\n    <h2>Company List</h2>\n    <table class=\"table table-striped \">\n        <thead>\n            <tr class=\"table-primary\">\n                <th>Company Code</th>\n                <th>Company Name</th>\n                <th>Company CEO Name</th>\n                <th>Company Turnover</th>\n                <th>Company Website</th>\n                <th>Company Stock Exchange</th>                \n                <th>Delete</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor='let companyDetail of companyList'>\n                <td>{{companyDetail.companyCode}}</td>\n                <td>{{companyDetail.companyName}}</td>\n                <td>{{companyDetail.companyCeoName}}</td>\n                <td>{{companyDetail.companyTurnover}}</td>\n                <td>{{companyDetail.companyWebsite}}</td>\n                <td>{{companyDetail.companyStockExchange}}</td>               \n                <td>\n                    <button type=\"button\" (click)=\"deleteCompany(companyDetail)\" class=\"btn btn-outline-danger\">Delete\n                        Company</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Company } from '../models/company';\r\nimport { CompanyDetailsService } from '../Services/company-details.service';\r\n\r\n@Component({\r\n  selector: 'app-company-register',\r\n  templateUrl: './company-register.component.html',\r\n  styleUrls: ['./company-register.component.css']\r\n})\r\nexport class CompanyRegisterComponent implements OnInit {\r\n\r\n  companyRegisterForm!: FormGroup;\r\n  companyStockExchangeList!: string[];\r\n  errorMessage?: string;\r\n  successMessage?: string;\r\n  submitted?: boolean;\r\n\r\n  constructor(private form: FormBuilder, private companyDetailsService: CompanyDetailsService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyRegisterForm = this.form.group({\r\n      companyCode: ['', Validators.required],\r\n      companyName: ['', Validators.required],\r\n      companyCeoName: ['', Validators.required],\r\n      companyTurnover: ['', Validators.required],\r\n      companyWebsite: ['', Validators.required],\r\n      companyStockExchange: ['', Validators.required]\r\n    });\r\n    this.companyStockExchangeList = ['NSE', 'BSE'];\r\n    this.successMessage = undefined;\r\n    this.errorMessage = undefined;\r\n  }\r\n\r\n  get formControl(): { [key: string]: AbstractControl } {\r\n    return this.companyRegisterForm.controls;\r\n  }\r\n\r\n  registerCompany() {\r\n    if (this.companyRegisterForm.invalid) {\r\n      this.submitted = true;\r\n      return;\r\n    }\r\n    const data = this.companyRegisterForm.value as Company;\r\n    this.submitted = false;\r\n    this.companyDetailsService.post(data).\r\n      subscribe((response: number) => {\r\n        if (response === 201) {\r\n          this.successMessage = \"Company details added successfully\";\r\n          this.companyRegisterForm.reset();\r\n          setTimeout(() => {            \r\n            this.router.navigate([\"/companyList\"]);\r\n          }, 1000);\r\n          return;          \r\n        }\r\n        this.errorMessage = \"Error occurred\";\r\n      });\r\n  }\r\n}\r\n","<app-menubar></app-menubar>\n<div *ngIf=\"successMessage || errorMessage\" role=\"alert\" class=\"alert\"\n    [ngClass]=\"{ 'alert-success':successMessage, 'alert-danger':errorMessage}\">\n    {{successMessage}}{{errorMessage}}\n</div>\n<h2>Add Company</h2>\n<form [formGroup]=\"companyRegisterForm\">\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Company Code</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"companyCode\" id=\"companyCode\"\n                aria-describedby=\"companyCode\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyCode'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyCode'].errors\">\n                Please enter the company code\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Company Name</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"companyName\" id=\"companyName\"\n                aria-describedby=\"companyName\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyName'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyName'].errors\">\n                Please enter the company name\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Company CEO</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"companyCeoName\" id=\"companyCeo\"\n                aria-describedby=\"companyCeo\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyCeoName'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyCeoName'].errors\">\n                Please enter the company CEO name\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Company Turnover</label>\n            <input type=\"number\" class=\"form-control\" formControlName=\"companyTurnover\" id=\"companyTurnover\"\n                aria-describedby=\"companyTurnover\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyTurnover'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyTurnover'].errors\">\n                Please enter the company turnover\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Company Website</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"companyWebsite\" id=\"companyWebsite\"\n                aria-describedby=\"companyWebsite\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyWebsite'].errors}\" />\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyWebsite'].errors\">\n                Please enter the company website\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"col-7\">\n            <label class=\"form-label\">Type of stock Exchange</label>\n            <select formControlName=\"companyStockExchange\" class=\"form-select\" aria-label=\"Default select example\"\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['companyStockExchange'].errors}\">\n                <option>Choose Stock Exchange</option>\n                <option value=\"NSE\">NSE</option>\n                <option value=\"BSE\">BSE</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyStockExchange'].errors\">\n                Please enter the company stock exchange\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-7\">\n            <button type=\"submit\" (click)=\"registerCompany()\" class=\"btn btn-primary mt-3\">Register Company</button>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-menubar></app-menubar>\n<div>\n    <marquee><h3 class=\"text-success\">Welcome to E-Stock Market Portal</h3> </marquee>\n</div>\n<div class=\"text-center\">\n    E-Stock Market Portal provides online facility to add and view companies in stock market.     \n</div>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticatedResponse } from '../models/auth-response-model';\r\nimport { LoginModel } from '../models/login-model';\r\nimport { AuthenticationService } from '../Services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm!: FormGroup;\r\n  credentials: LoginModel = {userName:'', password:''};\r\n  invalidLogin: boolean | undefined;\r\n  errorMessage?: string;\r\n  submitted?: boolean;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: [\"\", Validators.required],\r\n      password: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  get formControl(): { [key: string]: AbstractControl } {\r\n    return this.loginForm.controls;\r\n  }\r\n  \r\n  login() {\r\n    if (this.loginForm.invalid) {\r\n      this.submitted = true;      \r\n      this.errorMessage = undefined;\r\n      return;\r\n    }\r\n    this.errorMessage = undefined;\r\n    this.submitted = false;\r\n    this.router.navigate([\"/landing\"]);\r\n    const credentials = {\r\n      'userName' :  this.loginForm.value.userName,\r\n      'password' : this.loginForm.value.password\r\n    }\r\n    \r\n    this.authenticationService.login(credentials).\r\n        subscribe((response: AuthenticatedResponse) => {\r\n          if (response.statusCode === 200) {\r\n            this.authenticationService.setBearerToken(response.token);\r\n            this.invalidLogin = false; \r\n            this.router.navigate([\"/landing\"]);\r\n            return;\r\n          } else if (response.statusCode === 401) {\r\n            this.errorMessage = \"Invalid user details\";\r\n            return;\r\n          }\r\n          this.errorMessage = \"Error occurred\";\r\n        });\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <form class=\"container-fluid justify-content-start\">\r\n        <div class=\"container-fluid\">\r\n        add logo image here\r\n        </div>\r\n    </form>\r\n</nav>\r\n<h2 class=\"text-center\">E-Stock Portal Login</h2>\r\n<div class=\"center\">\r\n    <div *ngIf=\"errorMessage\" class=\"row\">\r\n        <div class=\"col\">\r\n            <div role=\"alert\" class=\"alert alert-danger\">\r\n                {{errorMessage}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"loginForm\" name=\"loginForm\" class=\"form-group\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <label class=\"form-label\">User Name</label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"userName\" autocomplete=\"false\"\r\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['userName'].errors}\" />\r\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['userName'].errors\">\r\n                    Please enter the user name\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <label class=\"form-label\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\"\r\n                [ngClass]=\"{ 'is-invalid': submitted  && formControl['password'].errors}\" />\r\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['password'].errors\">\r\n                    Please enter the password\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button type=\"button\" (click)=\"login()\" class=\"btn btn-primary mt-3\">Login</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../Services/authentication.service';\n\n@Component({\n  selector: 'app-menubar',\n  templateUrl: './menubar.component.html',\n  styleUrls: ['./menubar.component.css']\n})\nexport class MenubarComponent implements OnInit {\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  routeToLanding() {\n    this.router.navigate(['/landing']);\n  }\n\n  routeToAllRecords() {\n    this.router.navigate(['/companyList']);\n  }\n\n  routeToAddCompany() {\n    this.router.navigate(['/companyRegister']);\n  }\n\n  routeToBasicSearch() {\n    this.router.navigate(['/search']);\n  }\n\n  routeToAdvanceSearch() {\n    this.router.navigate(['/advanceSearch']);\n  }\n\n  routeToAddStock(){\n    this.router.navigate(['/addStock']);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary mb-3\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" (click)=\"routeToLanding()\">\n            <img class=\"logo\" alt=\"E-Stock Market Logo\" src=\"./assets/images/e-stock-logo.jpg\" />\n        </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div class=\"navbar-nav ms-auto\">\n                <a class=\"nav-link h5 text-warning\" (click)='routeToAllRecords()' aria-current=\"page\">All Companies</a>\n                <a class=\"nav-link h5 text-warning\" (click)=\"routeToAddCompany()\">Add Company</a>\n                <a class=\"nav-link h5 text-warning\" (click)=\"routeToAddStock()\">Add Stock</a>\n                <a class=\"nav-link h5 text-warning\" (click)=\"routeToAdvanceSearch()\">Advance Search</a>\n                <a class=\"nav-link h5 text-warning\" (click)=\"routeToBasicSearch()\">Basic Search</a>\n                <a class=\"nav-link h5 text-danger\" (click)=\"logout()\">Logout</a>\n            </div>\n        </div>\n    </div>\n</nav>","import { StockDetails } from \"./stock\";\n\nexport class CompanySearchDetail {\n    stocks?: StockDetails[];\n    companyName?: string;\n    maxPrice?: number;\n    minPrice?: number;\n    avgPrice?: number;\n    errorMsg?: string;\n\n    constructor(companyName: string,\n        stockList?: StockDetails[],\n        maxPrice?: number,\n        minPrice?: number,\n        avgPrice?: number,\n        errorMsg?: string) {\n\n        this.companyName = companyName\n        this.stocks = stockList;\n        this.maxPrice = maxPrice;\n        this.minPrice = minPrice;\n        this.avgPrice = avgPrice;\n        this.errorMsg = errorMsg;\n    }\n}\n","export class Company {\r\n    id?: string;\r\n    companyCode?: string;\r\n    companyName?: string;\r\n    companyCeoName?: string;\r\n    companyTurnover?: number;\r\n    companyWebsite?: string;\r\n    companyStockExchange?: string;\r\n    latestStockPrice?: number;\r\n\r\n    constructor(compCode: string, compName: string, compCeoName?: string, compTurnover?: number,\r\n        compWebsite?: string, compStockExchange?: string, latestStockPrice?: number) {\r\n        var length = 5;\r\n        var randomNum = (Math.pow(10, length).toString().slice(length - 1) + Math.floor((Math.random() * Math.pow(10, length)) + 1).toString()).slice(-length);\r\n        this.companyCode = compCode;\r\n        this.companyName = compName;\r\n        this.companyCeoName = compCeoName;\r\n        this.companyTurnover = compTurnover;\r\n        this.companyWebsite = compWebsite;\r\n        this.companyStockExchange = compStockExchange;\r\n        this.latestStockPrice = latestStockPrice;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Company } from '../models/company';\nimport { CompanyDetailsService } from '../Services/company-details.service';\nimport { StockDetailsService } from '../Services/stock-details.service';\n\n@Component({\n  selector: 'app-stock-register',\n  templateUrl: './stock-register.component.html',\n  styleUrls: ['./stock-register.component.css']\n})\nexport class StockRegisterComponent implements OnInit {\n\n  addCompanyStockForm!: FormGroup;\n  submitted?: boolean;\n  companyName?: string;\n  companyList!: Company[];\n  errorMessage?: string;\n  successMessage?: string;\n\n  constructor(private companyDetailsService: CompanyDetailsService, private stockDetailsService: StockDetailsService,\n    private form: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.addCompanyStockForm = this.form.group({\n      companyCode: [\"\", Validators.required],\n      stockValue: [\"\", Validators.required]\n    });\n    this.successMessage = undefined;\n    this.errorMessage = undefined;\n    this.companyList = [];\n\n    this.companyDetailsService.get().\n      subscribe(\n        (companyList: Company[] | undefined) => {\n          if (companyList !== undefined && companyList.length > 0) {\n            this.companyList = companyList;\n            return;\n          }\n          this.errorMessage = 'No company registered yet!!';\n        });\n  }\n\n  get formControl(): { [key: string]: AbstractControl } {\n    return this.addCompanyStockForm.controls;\n  }\n\n  addStock() {\n    this.errorMessage = '';\n    if (this.addCompanyStockForm.invalid) {\n      this.submitted = true;\n      this.successMessage = undefined;\n      this.errorMessage = undefined;\n      return;\n    }\n    this.submitted = false;\n    const stock = this.addCompanyStockForm.value.stockValue;\n    const companyCode = this.addCompanyStockForm.value.companyCode;\n    this.stockDetailsService.add(companyCode, stock).\n      subscribe((response: number) => {\n        if (response === 201) {\n          this.successMessage = \"Company stock added successfully\";\n          this.addCompanyStockForm.reset();\n          return;\n        }\n        this.errorMessage = \"Stock not added.please try again later\";\n      });\n\n  }\n}\n","<app-menubar></app-menubar>\n<div *ngIf=\"successMessage || errorMessage\" role=\"alert\" class=\"alert\"\n    [ngClass]=\"{ 'alert-success':successMessage, 'alert-danger':errorMessage}\">\n    {{successMessage}}{{errorMessage}}\n</div>\n<div *ngIf=\"companyList.length>0\">\n    <h2 class=\"adv-title\">Add stock</h2>\n    <form [formGroup]=\"addCompanyStockForm\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <label class=\"form-label\" for=\"compcode\">Company Code</label>\n                <select class=\"form-control\" formControlName=\"companyCode\"\n                    [ngClass]=\"{ 'is-invalid': submitted && formControl['companyCode'].errors}\">\n                    <option>Select Company Code</option>\n                    <option *ngFor=\"let company of companyList\">{{company.companyCode}}</option>\n                </select>\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['companyCode'].errors\">\n                    Please select the company code\n                </div>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <label class=\"form-label\" for=\"stockValue\">Stock value</label>\n                <input type=\"number\" formControlName=\"stockValue\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted  && formControl['stockValue'].errors}\" />\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formControl['stockValue'].errors\">\n                    Please enter the stock value\n                </div>\n            </div>\n            <div class=\"col-sm-3 pt-2\">\n                <button type=\"submit\" (click)=\"addStock()\" class=\"btn btn-primary mt-4\">Add</button>\n            </div>\n        </div>\n    </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}